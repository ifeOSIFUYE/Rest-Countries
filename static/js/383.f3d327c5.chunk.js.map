{"version":3,"file":"static/js/383.f3d327c5.chunk.js","mappings":"8SAmDA,EAzCa,SAAC,GAA8B,IAA5BA,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,YACvB,OACE,UAAC,KAAD,CACEC,GAAG,UACHC,aAAa,KACbC,SAAS,SACTC,UAAU,KACVC,QAASL,EACTM,OAAO,UANT,WAQE,SAAC,KAAD,CAAaC,MAAO,GAAK,EAAzB,UACE,SAAC,KAAD,CAAOC,IAAKT,EAAQU,KAAMC,IAAKX,EAAQY,KAAMC,UAAU,aAEzD,SAAC,KAAD,KACA,UAAC,KAAD,CAAKC,EAAE,IAAIC,GAAG,KAAKC,UAAU,OAA7B,WACE,SAAC,KAAD,CAASd,GAAG,KAAKe,SAAS,KAAKC,GAAG,IAAlC,SACGlB,EAAQY,QAEX,UAAC,KAAD,yBACc,KACZ,SAAC,KAAD,CAAKV,GAAG,OAAOiB,MAAM,WAArB,SACGnB,EAAQoB,WAAWC,uBAGxB,UAAC,KAAD,qBACU,KACR,SAAC,KAAD,CAAKnB,GAAG,OAAOiB,MAAM,WAArB,SACGnB,EAAQsB,aAGb,UAAC,KAAD,sBACW,KACT,SAAC,KAAD,CAAKpB,GAAG,OAAOiB,MAAM,WAArB,SACGnB,EAAQuB,QAAUvB,EAAQuB,QAAU,kB,uCCoFjD,EAxGa,WACX,OAAkCC,EAAAA,EAAAA,UAAS,IAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAA4BJ,EAAAA,EAAAA,UAAS,IAArC,eAAOK,EAAP,KAAeC,EAAf,KACA,GAA6BC,EAAAA,EAAAA,MAArBC,EAAR,EAAQA,OAAQC,EAAhB,EAAgBA,SAEVC,GAAWC,EAAAA,EAAAA,MAEXC,EAAkB,mCAAG,oGACPC,IAAAA,IAAU,oCADH,OACnBC,EADmB,OAEzBZ,EAAaY,EAAIC,MAFQ,2CAAH,sDAKxBC,EAAAA,EAAAA,YAAU,WACRJ,MACC,IAEH,IA2BMK,EAAe,SAACnB,GACpBI,EACED,EAAUI,QACR,SAACa,GAAD,OAAUA,EAAKpB,OAAOqB,gBAAkBrB,EAAOqB,kBAGnDb,EAAUR,GACVW,KAQF,OACE,SAAC,KAAD,CAAK/B,GAAG,OAAR,UACE,UAAC,KAAD,CAAW0C,KAAK,eAAeC,GAAI,GAAnC,WACE,UAAC,KAAD,CAAM3B,GAAI,EAAG4B,UAAW,CAAC,SAAU,SAAU,OAA7C,WACE,UAAC,KAAD,YACE,SAAC,KAAD,CAAkBC,cAAc,OAAOC,UAAU,SAAC,KAAD,OACjD,SAAC,KAAD,CACEC,KAAK,SACLC,SAAU,SAACC,GAAD,OAAOvB,EAASuB,EAAEC,OAAOC,QACnCC,QAAQ,UACRC,YAAY,0BACZC,MAAM,KACNnD,UAAU,WAGd,UAAC,KAAD,YACE,UAAC,KAAD,CAAYH,GAAIuD,EAAAA,GAAQC,GAAI,GAAIrD,UAAU,KAAKsD,KAAK,KAApD,WACE,SAAC,KAAD,CAAMzD,GAAG,QAAQe,SAAS,KAAK2C,GAAI,EAAnC,8BAEQ,KACR,SAAC,KAAD,QAEF,SAAC,KAAD,WA/DK,OAAO,IAAIC,IAAIpC,EAAUqC,KAAI,SAAC9D,GAAD,OAAaA,EAAQsB,YAChDwC,KAAI,SAACxC,GAAD,OACjB,SAAC,KAAD,CAAuBhB,QAAS,kBAAMmC,EAAanB,IAAnD,SACGA,GADYA,eAgEb,SAAC,KAAD,CAAUyC,GAAI/B,EAAQgC,gBAAc,EAApC,UACE,SAAC,KAAD,CACEV,QAAQ,QACRW,UAAU,SAAC,KAAD,IACV3D,QAlCW,WACnB8B,IACAH,KAiCQf,GAAI,EAJN,SAMGW,OAGL,SAAC,KAAD,CAAKe,KAAM,CAAC,QAAS,gBAAiBsB,EAAE,SAAxC,UACE,SAAC,KAAD,CAAYhE,GAAG,UAAUiE,cAAc,QAAQC,IAAK,GAApD,SArEiB,WACvB,GACE3C,EAAUI,QAAO,SAAC7B,GAAD,OAAaA,EAAQY,KAAK+B,cAAc0B,SAAS1C,MAElE,OAAOF,EACJI,QAAO,SAAC7B,GAAD,OAAaA,EAAQY,KAAK+B,cAAc0B,SAAS1C,MACxDmC,KAAI,SAAC9D,GAAD,OACH,SAAC,EAAD,CACEA,QAASA,EAETC,YAAa,WACXiC,EAAS,GAAD,OAAIlC,EAAQY,SAFjBZ,EAAQY,SA6DZ0D","sources":["components/Card.js","components/Home.js"],"sourcesContent":["import {\n  AspectRatio,\n  Box,\n  Divider,\n  GridItem,\n  Heading,\n  Image,\n  Text,\n} from '@chakra-ui/react';\n\nconst Card = ({ country, handleClick }) => {\n  return (\n    <GridItem\n      as=\"article\"\n      borderRadius=\"md\"\n      overflow=\"hidden\"\n      boxShadow=\"md\"\n      onClick={handleClick}\n      cursor=\"pointer\"\n    >\n      <AspectRatio ratio={16 / 9}>\n        <Image src={country.flag} alt={country.name} objectFit=\"cover\" />\n      </AspectRatio>\n      <Divider />\n      <Box p=\"6\" pb=\"10\" textAlign=\"left\">\n        <Heading as=\"h3\" fontSize=\"md\" mb=\"2\">\n          {country.name}\n        </Heading>\n        <Text>\n          Population:{' '}\n          <Box as=\"span\" color=\"gray.600\">\n            {country.population.toLocaleString()}\n          </Box>\n        </Text>\n        <Text>\n          Region:{' '}\n          <Box as=\"span\" color=\"gray.600\">\n            {country.region}\n          </Box>\n        </Text>\n        <Text>\n          Capital:{' '}\n          <Box as=\"span\" color=\"gray.600\">\n            {country.capital ? country.capital : 'nil'}\n          </Box>\n        </Text>\n      </Box>\n    </GridItem>\n  );\n};\n\nexport default Card;\n","import {\n  Box,\n  Container,\n  Flex,\n  SimpleGrid,\n  Input,\n  InputGroup,\n  InputLeftElement,\n  Button,\n  Menu,\n  MenuButton,\n  MenuList,\n  MenuItem,\n  Text,\n  useDisclosure,\n  Collapse,\n} from '@chakra-ui/react';\nimport { ChevronDownIcon, CloseIcon, SearchIcon } from '@chakra-ui/icons';\nimport Card from './Card';\nimport { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\n\nconst Home = () => {\n  const [countries, setCountries] = useState([]);\n  const [query, setQuery] = useState('');\n  const [filter, setFilter] = useState('');\n  const { isOpen, onToggle } = useDisclosure();\n\n  const navigate = useNavigate();\n\n  const fetchCountriesData = async () => {\n    const res = await axios.get('https://restcountries.com/v2/all');\n    setCountries(res.data);\n  };\n\n  useEffect(() => {\n    fetchCountriesData();\n  }, []);\n\n  const displayRegionMenuItems = () => {\n    const regions = [...new Set(countries.map((country) => country.region))];\n    return regions.map((region) => (\n      <MenuItem key={region} onClick={() => handleRegion(region)}>\n        {region}\n      </MenuItem>\n    ));\n  };\n\n  const displayCountries = () => {\n    if (\n      countries.filter((country) => country.name.toLowerCase().includes(query))\n    ) {\n      return countries\n        .filter((country) => country.name.toLowerCase().includes(query))\n        .map((country) => (\n          <Card\n            country={country}\n            key={country.name}\n            handleClick={() => {\n              navigate(`${country.name}`);\n            }}\n          />\n        ));\n    }\n  };\n\n  const handleRegion = (region) => {\n    setCountries(\n      countries.filter(\n        (item) => item.region.toLowerCase() === region.toLowerCase()\n      )\n    );\n    setFilter(region);\n    onToggle();\n  };\n\n  const clearFilters = () => {\n    fetchCountriesData();\n    onToggle();\n  };\n\n  return (\n    <Box as=\"main\">\n      <Container maxW=\"container.xl\" py={10}>\n        <Flex mb={7} direction={['column', 'column', 'row']}>\n          <InputGroup>\n            <InputLeftElement pointerEvents=\"none\" children={<SearchIcon />} />\n            <Input\n              type=\"search\"\n              onChange={(e) => setQuery(e.target.value)}\n              variant=\"flushed\"\n              placeholder=\"Search for a country...\"\n              width=\"md\"\n              boxShadow=\"lg\"\n            />\n          </InputGroup>\n          <Menu>\n            <MenuButton as={Button} pr={10} boxShadow=\"lg\" size=\"lg\">\n              <Text as=\"small\" fontSize=\"xs\" mr={7}>\n                Filter by Region\n              </Text>{' '}\n              <ChevronDownIcon />\n            </MenuButton>\n            <MenuList>{displayRegionMenuItems()}</MenuList>\n          </Menu>\n        </Flex>\n        <Collapse in={isOpen} animateOpacity>\n          <Button\n            variant=\"ghost\"\n            leftIcon={<CloseIcon />}\n            onClick={clearFilters}\n            mb={5}\n          >\n            {filter}\n          </Button>\n        </Collapse>\n        <Box maxW={['260px', 'container.xl']} m=\"0 auto\">\n          <SimpleGrid as=\"section\" minChildWidth=\"260px\" gap={14}>\n            {displayCountries()}\n          </SimpleGrid>\n        </Box>\n      </Container>\n    </Box>\n  );\n};\n\nexport default Home;\n"],"names":["country","handleClick","as","borderRadius","overflow","boxShadow","onClick","cursor","ratio","src","flag","alt","name","objectFit","p","pb","textAlign","fontSize","mb","color","population","toLocaleString","region","capital","useState","countries","setCountries","query","setQuery","filter","setFilter","useDisclosure","isOpen","onToggle","navigate","useNavigate","fetchCountriesData","axios","res","data","useEffect","handleRegion","item","toLowerCase","maxW","py","direction","pointerEvents","children","type","onChange","e","target","value","variant","placeholder","width","Button","pr","size","mr","Set","map","in","animateOpacity","leftIcon","m","minChildWidth","gap","includes","displayCountries"],"sourceRoot":""}